openapi: 3.0.3
info:
  title: IMDB RESTful API
  version: 1.0.0
  description: "This API provides a robust backend for managing media content, users,\
    \ and reviews, designed to mimic core functionalities of an IMDB-like platform.\
    \ \n\nKey Features:\n- **User Management**: Supports user registration, login,\
    \ logout, and profile management, ensuring secure authentication and authorization\
    \ for all operations.\n- **Media Management**: Create, update, retrieve, and delete\
    \ media objects such as movies, and streaming platforms. Restricted to admin users\
    \ for modification operations.\n- **Review System**: Registered users can submit,\
    \ update, and delete reviews for media content. The API also allows filtering\
    \ reviews by username and activity status.\n- **Rate Limiting**: Ensures efficient\
    \ usage through throttling mechanisms for both anonymous and authenticated users.\n\
    \nPlease refer to the endpoints below for detailed operations and data structures\
    \ supported by this API."
paths:
  /api/account/login/:
    post:
      operationId: api_account_login_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/account/logout/:
    post:
      operationId: api_account_logout_create
      description: Handles user logout by deleting the authentication token
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/account/register/:
    post:
      operationId: api_account_register_create
      description: Handles user registration and returns a token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_name:
                    type: array
                    items:
                      type: string
          description: Validation Error
  /api/media/:
    get:
      operationId: api_media_list
      description: Retrieve a list of all media objects.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
          description: ''
    post:
      operationId: api_media_create
      description: Create a new media object. Only accessible to admin users.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Media'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Media'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/media/{id}/:
    get:
      operationId: api_media_retrieve
      description: Retrieve a media object by its primary key (pk).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
    put:
      operationId: api_media_update
      description: Update an existing media object.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Media'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Media'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
    delete:
      operationId: api_media_destroy
      description: Delete a media object.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/media/{id}/review/create/:
    post:
      operationId: api_media_review_create_create
      description: Create a new review for a media.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/media/{id}/reviews/:
    get:
      operationId: api_media_reviews_list
      description: List all reviews for a specific media, filtered by username or
        activity.
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: reviewer__username
        schema:
          type: string
      - name: size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: username
        schema:
          type: string
        description: Filter by reviewer username
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
  /api/media/reviews/{id}/:
    get:
      operationId: api_media_reviews_retrieve
      description: Retrieve a specific review by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: api_media_reviews_update
      description: Update the details of an existing review by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: api_media_reviews_partial_update
      description: Partially update specific fields of an existing review by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: api_media_reviews_destroy
      description: Delete a specific review by its ID. Only accessible to the review's
        owner or admin users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/media/reviews/user/:
    get:
      operationId: api_media_reviews_user_list
      description: List reviews filtered by a reviewer"s username.
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
          description: ''
  /api/media/streaming_platform/:
    get:
      operationId: api_media_streaming_platform_list
      description: Retrieve a list of all available streaming platforms.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StreamingPlatform'
          description: ''
    post:
      operationId: api_media_streaming_platform_create
      description: Create a new streaming platform. Only accessible to admin users.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamingPlatform'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StreamingPlatform'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StreamingPlatform'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingPlatform'
          description: ''
  /api/media/streaming_platform/{id}/:
    get:
      operationId: api_media_streaming_platform_retrieve
      description: Retrieve a specific streaming platform by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this streaming platform.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingPlatform'
          description: ''
    put:
      operationId: api_media_streaming_platform_update
      description: Update the details of an existing streaming platform by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this streaming platform.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamingPlatform'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StreamingPlatform'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StreamingPlatform'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingPlatform'
          description: ''
    patch:
      operationId: api_media_streaming_platform_partial_update
      description: Partially update specific fields of a streaming platform.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this streaming platform.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStreamingPlatform'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStreamingPlatform'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStreamingPlatform'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingPlatform'
          description: ''
    delete:
      operationId: api_media_streaming_platform_destroy
      description: Delete a specific streaming platform by its ID. Only accessible
        to admin users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this streaming platform.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Media:
      type: object
      description: Serializer for the Media model.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 50
        storyline:
          type: string
          maxLength: 200
        active:
          type: boolean
        avg_rating:
          type: number
          format: double
          nullable: true
        user_rating:
          type: integer
          maximum: 5
          minimum: 1
        created:
          type: string
          format: date-time
          readOnly: true
        streaming_platform:
          type: integer
      required:
      - created
      - id
      - storyline
      - streaming_platform
      - title
      - user_rating
    PaginatedReviewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PatchedReview:
      type: object
      description: Serializer for the Review model, including the reviewer's username
        as a string.
      properties:
        id:
          type: integer
          readOnly: true
        reviewer:
          type: string
          readOnly: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
        description:
          type: string
          maxLength: 200
        active:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        update:
          type: string
          format: date-time
          readOnly: true
        media:
          type: integer
    PatchedStreamingPlatform:
      type: object
      description: Serializer for the StreamingPlatform model, including related media
        objects.
      properties:
        id:
          type: integer
          readOnly: true
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
          readOnly: true
        name:
          type: string
          maxLength: 30
        about:
          type: string
          maxLength: 150
        website:
          type: string
          format: uri
          maxLength: 100
    Registration:
      type: object
      description: Serializer for user registration, including password confirmation
        validation.
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        confirm_password:
          type: string
          writeOnly: true
      required:
      - confirm_password
      - password
      - username
    Review:
      type: object
      description: Serializer for the Review model, including the reviewer's username
        as a string.
      properties:
        id:
          type: integer
          readOnly: true
        reviewer:
          type: string
          readOnly: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
        description:
          type: string
          maxLength: 200
        active:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        update:
          type: string
          format: date-time
          readOnly: true
        media:
          type: integer
      required:
      - created
      - description
      - id
      - media
      - rating
      - reviewer
      - update
    StreamingPlatform:
      type: object
      description: Serializer for the StreamingPlatform model, including related media
        objects.
      properties:
        id:
          type: integer
          readOnly: true
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
          readOnly: true
        name:
          type: string
          maxLength: 30
        about:
          type: string
          maxLength: 150
        website:
          type: string
          format: uri
          maxLength: 100
      required:
      - about
      - id
      - media
      - name
      - website
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
